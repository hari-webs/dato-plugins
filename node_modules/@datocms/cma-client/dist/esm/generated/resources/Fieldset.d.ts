import BaseResource from '../../BaseResource';
import type * as ApiTypes from '../ApiTypes';
import type * as RawApiTypes from '../RawApiTypes';
export default class Fieldset extends BaseResource {
    static readonly TYPE: "fieldset";
    /**
     * Create a new fieldset
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    create(itemTypeId: string | ApiTypes.ItemTypeData, body: ApiTypes.FieldsetCreateSchema): Promise<ApiTypes.Fieldset>;
    /**
     * Create a new fieldset
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawCreate(itemTypeId: string, body: RawApiTypes.FieldsetCreateSchema): Promise<RawApiTypes.FieldsetCreateTargetSchema>;
    /**
     * Update a fieldset
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    update(fieldsetId: string | ApiTypes.FieldsetData, body: ApiTypes.FieldsetUpdateSchema): Promise<ApiTypes.Fieldset>;
    /**
     * Update a fieldset
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawUpdate(fieldsetId: string, body: RawApiTypes.FieldsetUpdateSchema): Promise<RawApiTypes.FieldsetUpdateTargetSchema>;
    /**
     * List all fieldsets of a model/block
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    list(itemTypeId: string | ApiTypes.ItemTypeData): Promise<ApiTypes.FieldsetInstancesTargetSchema>;
    /**
     * List all fieldsets of a model/block
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawList(itemTypeId: string): Promise<RawApiTypes.FieldsetInstancesTargetSchema>;
    /**
     * Retrieve a fieldset
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    find(fieldsetId: string | ApiTypes.FieldsetData): Promise<ApiTypes.Fieldset>;
    /**
     * Retrieve a fieldset
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawFind(fieldsetId: string): Promise<RawApiTypes.FieldsetSelfTargetSchema>;
    /**
     * Delete a fieldset
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    destroy(fieldsetId: string | ApiTypes.FieldsetData): Promise<ApiTypes.Fieldset>;
    /**
     * Delete a fieldset
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/fieldset/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawDestroy(fieldsetId: string): Promise<RawApiTypes.FieldsetDestroyTargetSchema>;
}
