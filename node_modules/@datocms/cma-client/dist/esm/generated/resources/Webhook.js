import * as Utils from '@datocms/rest-client-utils';
import BaseResource from '../../BaseResource';
export default class Webhook extends BaseResource {
    /**
     * Create a new webhook
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    create(body) {
        return this.rawCreate(Utils.serializeRequestBody(body, {
            type: 'webhook',
            attributes: [
                'name',
                'url',
                'custom_payload',
                'headers',
                'events',
                'http_basic_user',
                'http_basic_password',
                'enabled',
                'payload_api_version',
                'nested_items_in_payload',
                'auto_retry',
            ],
            relationships: [],
        })).then((body) => Utils.deserializeResponseBody(body));
    }
    /**
     * Create a new webhook
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawCreate(body) {
        return this.client.request({
            method: 'POST',
            url: '/webhooks',
            body,
        });
    }
    /**
     * Update a webhook
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    update(webhookId, body) {
        return this.rawUpdate(Utils.toId(webhookId), Utils.serializeRequestBody(body, {
            id: Utils.toId(webhookId),
            type: 'webhook',
            attributes: [
                'name',
                'url',
                'custom_payload',
                'headers',
                'events',
                'http_basic_user',
                'http_basic_password',
                'enabled',
                'payload_api_version',
                'nested_items_in_payload',
                'auto_retry',
            ],
            relationships: [],
        })).then((body) => Utils.deserializeResponseBody(body));
    }
    /**
     * Update a webhook
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawUpdate(webhookId, body) {
        return this.client.request({
            method: 'PUT',
            url: `/webhooks/${webhookId}`,
            body,
        });
    }
    /**
     * List all webhooks
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    list() {
        return this.rawList().then((body) => Utils.deserializeResponseBody(body));
    }
    /**
     * List all webhooks
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawList() {
        return this.client.request({
            method: 'GET',
            url: '/webhooks',
        });
    }
    /**
     * Retrieve a webhook
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    find(webhookId) {
        return this.rawFind(Utils.toId(webhookId)).then((body) => Utils.deserializeResponseBody(body));
    }
    /**
     * Retrieve a webhook
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawFind(webhookId) {
        return this.client.request({
            method: 'GET',
            url: `/webhooks/${webhookId}`,
        });
    }
    /**
     * Delete a webhook
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    destroy(webhookId) {
        return this.rawDestroy(Utils.toId(webhookId)).then((body) => Utils.deserializeResponseBody(body));
    }
    /**
     * Delete a webhook
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/webhook/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawDestroy(webhookId) {
        return this.client.request({
            method: 'DELETE',
            url: `/webhooks/${webhookId}`,
        });
    }
}
Webhook.TYPE = 'webhook';
//# sourceMappingURL=Webhook.js.map