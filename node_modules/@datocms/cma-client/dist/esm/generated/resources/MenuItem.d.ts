import BaseResource from '../../BaseResource';
import type * as ApiTypes from '../ApiTypes';
import type * as RawApiTypes from '../RawApiTypes';
export default class MenuItem extends BaseResource {
    static readonly TYPE: "menu_item";
    /**
     * Create a new menu item
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    create(body: ApiTypes.MenuItemCreateSchema): Promise<ApiTypes.MenuItem>;
    /**
     * Create a new menu item
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawCreate(body: RawApiTypes.MenuItemCreateSchema): Promise<RawApiTypes.MenuItemCreateTargetSchema>;
    /**
     * Update a menu item
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    update(menuItemId: string | ApiTypes.MenuItemData, body: ApiTypes.MenuItemUpdateSchema): Promise<ApiTypes.MenuItem>;
    /**
     * Update a menu item
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawUpdate(menuItemId: string, body: RawApiTypes.MenuItemUpdateSchema): Promise<RawApiTypes.MenuItemUpdateTargetSchema>;
    /**
     * List all menu items
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    list(queryParams?: ApiTypes.MenuItemInstancesHrefSchema): Promise<ApiTypes.MenuItemInstancesTargetSchema>;
    /**
     * List all menu items
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawList(queryParams?: RawApiTypes.MenuItemInstancesHrefSchema): Promise<RawApiTypes.MenuItemInstancesTargetSchema>;
    /**
     * Retrieve a menu item
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    find(menuItemId: string | ApiTypes.MenuItemData): Promise<ApiTypes.MenuItem>;
    /**
     * Retrieve a menu item
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawFind(menuItemId: string): Promise<RawApiTypes.MenuItemSelfTargetSchema>;
    /**
     * Delete a menu item
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    destroy(menuItemId: string | ApiTypes.MenuItemData): Promise<ApiTypes.MenuItem>;
    /**
     * Delete a menu item
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawDestroy(menuItemId: string): Promise<RawApiTypes.MenuItemDestroyTargetSchema>;
    /**
     * Reorders a set of menu items
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/reorder
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     *
     * @deprecated This API call is to be considered private and might change without notice
     */
    reorder(body: ApiTypes.MenuItemReorderSchema): Promise<ApiTypes.MenuItemReorderJobSchema>;
    /**
     * Reorders a set of menu items
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/menu-item/reorder
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     *
     * @deprecated This API call is to be considered private and might change without notice
     */
    rawReorder(body: RawApiTypes.MenuItemReorderSchema): Promise<RawApiTypes.MenuItemReorderJobSchema>;
}
