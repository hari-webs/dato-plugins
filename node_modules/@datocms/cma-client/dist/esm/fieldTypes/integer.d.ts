import { type LocalizedFieldValue } from '../utilities/normalizedFieldValues';
import type { IntegerEditorConfiguration } from './appearance/integer';
import type { NumberRangeValidator } from './validators/number_range';
import type { RequiredValidator } from './validators/required';
export type IntegerFieldValue = number | null;
export declare function isIntegerFieldValue(value: unknown): value is IntegerFieldValue;
export declare function isLocalizedIntegerFieldValue(value: unknown): value is LocalizedFieldValue<IntegerFieldValue>;
export type IntegerFieldValidators = {
    /** Value must be specified or it won't be valid */
    required?: RequiredValidator;
    /** Accept numbers only inside a specified range */
    number_range?: NumberRangeValidator;
};
export type IntegerFieldAppearance = {
    editor: 'integer';
    parameters: IntegerEditorConfiguration;
} | {
    /** Plugin ID */
    editor: string;
    /** Plugin configuration */
    parameters: Record<string, unknown>;
};
