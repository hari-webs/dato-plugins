import BaseResource from '../../BaseResource';
import type * as ApiTypes from '../ApiTypes';
import type * as RawApiTypes from '../RawApiTypes';
export default class UploadFilter extends BaseResource {
    static readonly TYPE: "upload_filter";
    /**
     * Create a new filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    create(body: ApiTypes.UploadFilterCreateSchema): Promise<ApiTypes.UploadFilter>;
    /**
     * Create a new filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawCreate(body: RawApiTypes.UploadFilterCreateSchema): Promise<RawApiTypes.UploadFilterCreateTargetSchema>;
    /**
     * Update a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    update(uploadFilterId: string | ApiTypes.UploadFilterData, body: ApiTypes.UploadFilterUpdateSchema): Promise<ApiTypes.UploadFilter>;
    /**
     * Update a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawUpdate(uploadFilterId: string, body: RawApiTypes.UploadFilterUpdateSchema): Promise<RawApiTypes.UploadFilterUpdateTargetSchema>;
    /**
     * List all filters
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    list(): Promise<ApiTypes.UploadFilterInstancesTargetSchema>;
    /**
     * List all filters
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawList(): Promise<RawApiTypes.UploadFilterInstancesTargetSchema>;
    /**
     * Retrieve a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    find(uploadFilterId: string | ApiTypes.UploadFilterData): Promise<ApiTypes.UploadFilter>;
    /**
     * Retrieve a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawFind(uploadFilterId: string): Promise<RawApiTypes.UploadFilterSelfTargetSchema>;
    /**
     * Delete a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    destroy(uploadFilterId: string | ApiTypes.UploadFilterData): Promise<ApiTypes.UploadFilter>;
    /**
     * Delete a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/upload-filter/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawDestroy(uploadFilterId: string): Promise<RawApiTypes.UploadFilterDestroyTargetSchema>;
}
