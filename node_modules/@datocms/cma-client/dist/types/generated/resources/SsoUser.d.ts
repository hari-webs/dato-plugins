import BaseResource from '../../BaseResource';
import type * as ApiTypes from '../ApiTypes';
import type * as RawApiTypes from '../RawApiTypes';
export default class SsoUser extends BaseResource {
    static readonly TYPE: "sso_user";
    /**
     * List all users
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/sso-user/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    list(): Promise<ApiTypes.SsoUserInstancesTargetSchema>;
    /**
     * List all users
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/sso-user/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawList(): Promise<RawApiTypes.SsoUserInstancesTargetSchema>;
    /**
     * Returns a SSO user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/sso-user/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    find(userId: string | ApiTypes.UserData): Promise<ApiTypes.SsoUser>;
    /**
     * Returns a SSO user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/sso-user/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawFind(userId: string): Promise<RawApiTypes.SsoUserSelfTargetSchema>;
    /**
     * Copy editors as SSO users
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/sso-user/copy_users
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    copyUsers(): Promise<ApiTypes.SsoUserCopyUsersTargetSchema>;
    /**
     * Copy editors as SSO users
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/sso-user/copy_users
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawCopyUsers(): Promise<RawApiTypes.SsoUserCopyUsersTargetSchema>;
    /**
     * Delete a SSO user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/sso-user/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    destroy(userId: string | ApiTypes.UserData, queryParams?: ApiTypes.SsoUserDestroyHrefSchema): Promise<ApiTypes.SsoUser>;
    /**
     * Delete a SSO user
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/sso-user/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawDestroy(userId: string, queryParams?: RawApiTypes.SsoUserDestroyHrefSchema): Promise<RawApiTypes.SsoUserDestroyTargetSchema>;
}
