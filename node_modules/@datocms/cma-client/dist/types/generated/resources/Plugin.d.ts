import BaseResource from '../../BaseResource';
import type * as ApiTypes from '../ApiTypes';
import type * as RawApiTypes from '../RawApiTypes';
export default class Plugin extends BaseResource {
    static readonly TYPE: "plugin";
    /**
     * Create a new plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    create(body: ApiTypes.PluginCreateSchema): Promise<ApiTypes.Plugin>;
    /**
     * Create a new plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawCreate(body: RawApiTypes.PluginCreateSchema): Promise<RawApiTypes.PluginCreateTargetSchema>;
    /**
     * Update a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    update(pluginId: string | ApiTypes.PluginData, body: ApiTypes.PluginUpdateSchema): Promise<ApiTypes.Plugin>;
    /**
     * Update a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawUpdate(pluginId: string, body: RawApiTypes.PluginUpdateSchema): Promise<RawApiTypes.PluginUpdateTargetSchema>;
    /**
     * List all plugins
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    list(): Promise<ApiTypes.PluginInstancesTargetSchema>;
    /**
     * List all plugins
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawList(): Promise<RawApiTypes.PluginInstancesTargetSchema>;
    /**
     * Retrieve a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    find(pluginId: string | ApiTypes.PluginData): Promise<ApiTypes.Plugin>;
    /**
     * Retrieve a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawFind(pluginId: string): Promise<RawApiTypes.PluginSelfTargetSchema>;
    /**
     * Delete a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    destroy(pluginId: string | ApiTypes.PluginData): Promise<ApiTypes.Plugin>;
    /**
     * Delete a plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawDestroy(pluginId: string): Promise<RawApiTypes.PluginDestroyTargetSchema>;
    /**
     * Retrieve all fields using the plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/fields
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    fields(pluginId: string | ApiTypes.PluginData): Promise<ApiTypes.PluginFieldsTargetSchema>;
    /**
     * Retrieve all fields using the plugin
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/plugin/fields
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawFields(pluginId: string): Promise<RawApiTypes.PluginFieldsTargetSchema>;
}
